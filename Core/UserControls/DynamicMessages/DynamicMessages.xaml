<UserControl x:Class="Core.DynamicMessages"
             x:Name="MyUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Core"
             mc:Ignorable="d" >

    <UserControl.Resources>

        <!--The converters-->
        <local:PanelMarginConverter x:Key="PanelMarginConverter" />
        <local:PanelWidthConverter x:Key="PanelWidthConverter" />
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" True="Visible" False="Collapsed"/>
        <local:BooleanToVisibilityConverter x:Key="NegativeBooleanToVisibilityConverter" True="Collapsed" False="Visible"/>

        <!--Expand Panel Story Board-->
        <Storyboard x:Key="expandStoryBoard" 
                    TargetProperty="RenderTransform.(TranslateTransform.X)"
                    AccelerationRatio=".4"
                    DecelerationRatio=".2">
            <DoubleAnimation Storyboard.TargetName="SliderPanel" Duration="0:0:0.4" 
                             From="0"
                             To="{Binding Source={x:Reference LayoutRoot}, Path=DataContext.SlidePanelWidth}"/>
        </Storyboard>

        <!--Collapse Panel Story Board-->
        <Storyboard x:Key="collapseStoryBoard" 
                    TargetProperty="RenderTransform.(TranslateTransform.X)"
                    AccelerationRatio=".3"
                    DecelerationRatio=".2">
            <DoubleAnimation Storyboard.TargetName="SliderPanel" Duration="0:0:0.4" 
                             To="0"
                             From="{Binding Source={x:Reference LayoutRoot}, Path=DataContext.SlidePanelWidth}"/>
        </Storyboard>

        <!--The Delete Message Animation-->
        <Storyboard x:Key="DeleteItemAnimation">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                             From="0" To="-1000" 
                             Duration="0:0:0.4" 
                             AccelerationRatio=".4"
                             DecelerationRatio=".2"
                             AutoReverse="False"
                             Completed="OnDeleteItemAnimationCompleted"/>
        </Storyboard>

        <!--The message border style-->
        <Style x:Key="MessageBorder" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="Black"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding GenericMessageType}"  Value="{x:Static local:GenericMessageType.Warning}">
                    <Setter Property="Background" Value="{StaticResource FlatDarkOrange}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding GenericMessageType}"  Value="{x:Static local:GenericMessageType.Error}">
                    <Setter Property="Background" Value="{StaticResource FlatDarkRed}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding GenericMessageType}"  Value="{x:Static local:GenericMessageType.Generic}">
                    <Setter Property="Background" Value="Blue"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--The Animation Zoom In Image style-->
        <Style x:Key="AnimationZoomInImageStyle" TargetType="{x:Type Image}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" 
                         Value="True">

                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Height"
                                             From="100" To="50"
                                             Duration="0:0:0.25"
                                             AutoReverse="false"
                                              />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--The Animation Zoom Out Image style-->
        <Style x:Key="AnimationZoomOutImageStyle" TargetType="{x:Type Image}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" 
                         Value="True">

                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Height"
                                             From="50" To="100"
                                             Duration="0:0:0.25"
                                             AutoReverse="false"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--The List View Item Style-->
        <Style TargetType="{x:Type ListViewItem}">

            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="OnListViewItemMouseDown" />
            <EventSetter Event="PreviewMouseLeftButtonUp" Handler="OnListViewItemMouseUp" />

            <EventSetter Event="TouchEnter" Handler="OnListViewItemTouchDown" />
            <EventSetter Event="PreviewTouchUp" Handler="OnListViewItemTouchUp" />

            <Setter Property="IsManipulationEnabled"  Value="True"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Padding" Value="10,0,10,5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform x:Name="renderTransform" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>

                <!-- Delete the selected background and brush -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Trigger>

                <!-- Translated the deleted item with animation -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="true"/>
                        <Condition Binding="{Binding  Source={x:Reference LayoutRoot}, Path=DataContext.IsMessageDeleted}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource DeleteItemAnimation}"/>
                    </MultiDataTrigger.EnterActions>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Message Data Template-->
        <DataTemplate x:Key="MessageDataTemplate">
            <StackPanel Orientation="Horizontal">
                <StackPanel.Effect>
                    <DropShadowEffect Color="Gray" ShadowDepth="5" />
                </StackPanel.Effect>

                <!--Title and Message-->
                <Border Style="{StaticResource MessageBorder}"  BorderBrush="Black" BorderThickness="1,1,0,1" 
                        Width="{Binding Source={x:Reference LayoutRoot}, Path=DataContext.SlidePanelWidth}"
                        Visibility="Visible">
                    <StackPanel Orientation="Vertical" >
                        <TextBlock Grid.Column="0" Grid.Row="0"
                                   Foreground="White" VerticalAlignment="Center"  HorizontalAlignment="Left"
                                   FontSize="18"
                                   FontWeight="Bold"
                                   Padding="15,5,5,5">
                         <Underline>
                            <Run Text="{Binding Title, Mode=OneWay}"/>
                        </Underline>
                        </TextBlock>

                        <TextBlock  Grid.Column="0" Grid.Row="1"
                                Text="{Binding Message, Mode=OneWay}"
                                TextWrapping="Wrap" TextTrimming="CharacterEllipsis"
                                Foreground="White" FontSize="15"
                                VerticalAlignment="Center"  HorizontalAlignment="Left"
                                Padding="15,5,5,5"/>
                    </StackPanel>
                </Border>
                
                <!--Bookmark-->
                <Border  BorderThickness="0,1,1,1" 
                         Width="{Binding Source={x:Reference LayoutRoot}, Path=DataContext.BookmarkWidth}"
                         Height="100"
                         HorizontalAlignment="Right"
                         VerticalAlignment="Top"
                         PreviewMouseDown="OnTabButtonMouseDown">
                    <Border.Resources>
                        <Style TargetType="{x:Type Border}">

                            <Setter Property="BorderBrush" Value="Black"/>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding GenericMessageType}"  Value="{x:Static local:GenericMessageType.Warning}">
                                    <Setter Property="Background" Value="DarkOrange"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding GenericMessageType}"  Value="{x:Static local:GenericMessageType.Error}">
                                    <Setter Property="Background" Value="Red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding GenericMessageType}"  Value="{x:Static local:GenericMessageType.Generic}">
                                    <Setter Property="Background" Value="Blue"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Resources>

                    <!--For Animation Image two different Images with different animated styles are created.
                    There are several issues with StoryBoard in Style and the solution found is to
                    fired the Animation in Style by visible changed event of current image.
                    Only one image is visible at once, so only one  animation is started-->
                    <DockPanel  HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Grid.Column="2" Grid.RowSpan="2" >
                        <!--Zoom In Animated Image-->
                        <Image  x:Name="scaledzoomInImage" 
                            Style="{StaticResource AnimationZoomInImageStyle}" 
                            Source="{StaticResource MyImage}" 
                            Visibility="{Binding Source={x:Reference LayoutRoot}, Path=DataContext.IsMessagesExpanded, Converter={StaticResource NegativeBooleanToVisibilityConverter}}"
                            Stretch="Uniform"
                            Height="70">
                        </Image>
                        <!--Zoom Out Animated Image-->
                        <Image  x:Name="scaledzoomOutImage"
                            Style="{StaticResource AnimationZoomOutImageStyle}" 
                            Source="{StaticResource MyImage}" 
                            Visibility="{Binding Source={x:Reference LayoutRoot}, Path=DataContext.IsMessagesExpanded,  Converter={StaticResource BooleanToVisibilityConverter}}"
                            Stretch="Uniform"
                            Height="70">
                        </Image>
                    </DockPanel>
                </Border>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <!--Layout Root-->
    <Grid x:Name="LayoutRoot">
        <StackPanel x:Name="SliderPanel" HorizontalAlignment="Left" 
                      Margin="{Binding SlidePanelWidth, Converter={StaticResource PanelMarginConverter}}">
            <StackPanel.RenderTransform>
                <TranslateTransform />
            </StackPanel.RenderTransform>
            <ListView x:Name="propertiesPanel" ItemsSource="{Binding Messages, Mode=TwoWay}" 
                      ItemTemplate="{StaticResource MessageDataTemplate}"
                      Background="Transparent" BorderThickness="0"
                      ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                      ScrollViewer.VerticalScrollBarVisibility="Hidden"
                      Height="Auto">
                <ListView.Width>
                    <MultiBinding Converter="{StaticResource PanelWidthConverter}">
                        <Binding Mode="OneWay" Path="SlidePanelWidth"/>
                        <Binding Mode="OneWay" Path="BookmarkWidth"/>
                    </MultiBinding>
                </ListView.Width>
            </ListView>
        </StackPanel>
    </Grid>

</UserControl>

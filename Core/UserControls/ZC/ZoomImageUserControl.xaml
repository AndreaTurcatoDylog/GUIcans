<controls:DisposableUserControlBase x:Class="Core.ZoomImageUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:Core"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             Width="Auto"
             Height="Auto">

    <UserControl.Resources>

        <controls:DimensionImageConverter x:Key="DimensionImageConverter"/>

        <!--SrollViewer ScrollBar Repeat Buttons (at each end)-->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}"
                                BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Fill="{StaticResource GlyphBrush}"
                                  Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged up/down or left/right Buttons –>-->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="0" Background="DarkBlue" BorderBrush="Transparent" BorderThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>

                <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="0"
                  Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,0,0,0" Background="{StaticResource HorizontalNormalBrush}"
                                BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" 
                              Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <!-- – HorizontalScrollBar Template using the previously created Templates -->
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="0"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="0"/>
                </Grid.ColumnDefinitions>

                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="0" 
                          Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,0,0,0" Background="{StaticResource NormalBrush}" 
                           BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="0" 
                          Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>

        <!-- – Style for overall  ScrollBar -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="6" />
                    <!-- Change this value for the height of Horizontal Scroolbar -->
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="6"/>
                    <!-- Change this value for the width of Vertical Scroolbar -->
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- – Style for overall  ScrollViewer -->
        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1"
                                       Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" 
                                       ViewportSize="{TemplateBinding ViewportWidth}" 
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <!--Grid Layout root-->
    <Grid  x:Name="LayoutRoot">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--<ScrollViewer x:Name="imageScrollViewer" Visibility="Collapsed"/>
        CanContentScroll="True"-->
        <!-- Main Image-->
        <Grid Grid.Column="0" Grid.Row="1">
            <Border x:Name="MainImageBorder" BorderThickness="1"
                BorderBrush="Black" 
                Background="Silver" >
                <ScrollViewer x:Name="ImageScrollViewer" 
                          HorizontalScrollBarVisibility="Auto"  VerticalScrollBarVisibility="Auto"
                          CanContentScroll="False">
                    <!--Main Image-->
                    <Grid>
                        <Image x:Name="MainImage" Source="{Binding  ImageSource}" 
                             IsManipulationEnabled="True" 
                             Width="{Binding ElementName=MainImageBorder, Path=ActualWidth, Converter={StaticResource DimensionImageConverter}}"
                             Height="{Binding ElementName=MainImageBorder, Path=ActualHeight, Converter={StaticResource DimensionImageConverter}}"
                             RenderOptions.BitmapScalingMode="NearestNeighbor"
                             VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                             Stretch="Uniform">
                            <Image.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="{Binding  ScalarZoomX}" ScaleY="{Binding ScalarZoomY}"/>
                                </TransformGroup>
                            </Image.LayoutTransform>
                        </Image>

                        <Image x:Name="ImageResult" 
                              Source="{Binding  ResultsSource}"
                             IsManipulationEnabled="True" 
                             VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                             Width="{Binding ElementName=MainImageBorder, Path=ActualWidth, Converter={StaticResource DimensionImageConverter}}"
                             Height="{Binding ElementName=MainImageBorder, Path=ActualHeight, Converter={StaticResource DimensionImageConverter}}"
                             Stretch="Uniform"
                            PreviewMouseMove="OnImagePreviewMouseMove"
                            PreviewMouseLeftButtonDown="OnImagePreviewMouseLeftButtonDown">
                            <Image.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform   ScaleX="{Binding  ScalarZoomX}" ScaleY="{Binding ScalarZoomY}"/>
                                </TransformGroup>
                            </Image.LayoutTransform>
                        </Image>

                        <!--<Canvas x:Name="ImageResultCanvas" Margin="{Binding ResultImagesMargin}">
                            <Canvas.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform   ScaleX="{Binding  ScalarZoomX}" ScaleY="{Binding ScalarZoomY}"/>
                                </TransformGroup>
                            </Canvas.LayoutTransform>-->

                        <!--<Canvas.RenderTransform>
                                <MatrixTransform/>
                            </Canvas.RenderTransform>-->
                        <!--</Canvas>-->
                    </Grid>
                </ScrollViewer>
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBorderEffectVisible}" Value="True">
                                <Setter Property="Effect" >
                                    <Setter.Value>
                                        <DropShadowEffect Direction="-45" BlurRadius="4" ShadowDepth="7" Opacity="0.5"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <!--<Border.Effect>
                    <DropShadowEffect Direction="-45" BlurRadius="4" ShadowDepth="7" Opacity="0.5"/>
                </Border.Effect>-->
            </Border>

            <!-- Create the Up, Down and Reset Buttons-->
            <StackPanel Orientation="Vertical" VerticalAlignment="Bottom" HorizontalAlignment="Left"  Margin="7,0,0,5">

                <StackPanel Orientation="Vertical" Margin="0,0,0,20">
                    <TextBlock Text="Get point" HorizontalAlignment="Center" FontSize="15" Foreground="Red" 
                          FontWeight="SemiBold"     Margin="0,0,0,5"/>
                    <ToggleButton Grid.Column="1" Style="{StaticResource SwitchTypeToggleButton}"      
                        IsChecked="{Binding CanChooseCoordinates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Width="67" Height="31" Margin="0,0,0,0"/>
                </StackPanel>

                <RepeatButton x:Name="ZoomOutButton"         
                    Style="{StaticResource HighlightedPressedButtonStyle}"
                    Content="+" FontSize="15" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                    IsEnabled="{Binding IsZoomEnabled}" Delay="500" Interval="100"
                    Width="60" 
                    Height="60"/>
                <RepeatButton x:Name="ZoomInButton"
                    Style="{StaticResource HighlightedPressedButtonStyle}"
                    Content="-" FontSize="15" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                    IsEnabled="{Binding IsZoomEnabled}" Delay="500" Interval="100"
                    Width="60" 
                    Height="60"/>
                <RepeatButton x:Name="RefreshButton"
                    Style="{StaticResource HighlightedPressedButtonStyle}"
                    Content="╔═╗&#xa;╚═╝" FontSize="15" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                    IsEnabled="{Binding IsZoomEnabled}"
                    Width="60" 
                    Height="60"/>

                <TextBlock FontSize="18" Foreground="Green" FontWeight="SemiBold" Text="{Binding CoordinateMessage, UpdateSourceTrigger=PropertyChanged}" Margin="10,10,0,10"/>
            </StackPanel>

        </Grid>

        <!--Horizontal Ruler - Vertical Line-->
        <!--<ScrollViewer x:Name="horizzontalRulerScroolViewer" Grid.Column="0" Grid.Row="0" Margin="0,0,0,0"
                    IsManipulationEnabled="False"  
                    HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                    CanContentScroll="false"
                    Visibility="{Binding HorizontalRulersVisibility}">

            <Grid>
                <Image x:Name="horizontalRuler" Visibility="Visible"
                            Source="c:\simone\HorizontalPixelRuler.png"
                            HorizontalAlignment="Left" VerticalAlignment="Bottom"  
                            Margin="{Binding HorizontalRuleMargin}">
                    <Image.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform  CenterX="0.5" CenterY="0.5" ScaleX="{Binding  ScalarZoomX}" />
                        </TransformGroup>
                    </Image.LayoutTransform>
                </Image>

                <Line x:Name="VerticalLine" Stroke="Red" Visibility="Hidden"  HorizontalAlignment="Left" Margin="{Binding HorizontalRuleMargin}"/>
            </Grid>
        </ScrollViewer>-->


        <!--Vertical Ruler - Horizontal Line-->
        <!--
        <ScrollViewer x:Name="verticalRulerScroolViewer" Grid.Column="1" Grid.Row="1" Margin="0,0,0,0"
                      IsManipulationEnabled="false"  
                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                      CanContentScroll="False"
                      Visibility="{Binding VerticalRulersVisibility}">
            <Grid>
                <Image x:Name="verticalRuler"
                         Source="c:\simone\VerticalPixelRuler.png"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Top"
                        Margin="{Binding VerticalRuleMargin}">
                    <Image.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform  CenterX="0.5" CenterY="0.5"  ScaleY="{Binding ScalarZoomY}"/>
                        </TransformGroup>
                    </Image.LayoutTransform>
                </Image>

                <Line x:Name="horizontalLine" Stroke="Red" Visibility="Hidden" VerticalAlignment="Top" Margin="{Binding VerticalRuleMargin}"/>
            </Grid>
        </ScrollViewer>-->
    </Grid>
</controls:DisposableUserControlBase>
